<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Futuristic 3D Holographic Card</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: radial-gradient(circle at center, #111, #000);
            overflow: hidden;
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
        }
        .card {
            width: 350px;
            height: 450px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 25px;
            backdrop-filter: blur(25px);
            border: 2px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 40px rgba(0, 255, 255, 0.5);
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            font-family: Arial, sans-serif;
            color: white;
            font-size: 2rem;
            font-weight: bold;
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }
        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0 0 60px rgba(0, 255, 255, 0.7);
        }
        .button-container {
            position: absolute;
            bottom: 20px;
            display: flex;
            gap: 1rem;
        }
        .btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 50px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.4s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        .btn-yellow {
            background: linear-gradient(135deg, #f5c518, #d4a017);
            color: #0d0d0d;
            box-shadow: 0 5px 20px rgba(245, 197, 24, 0.4);
        }
        .btn-navy {
            background: linear-gradient(135deg, #2a2a2a, #121212);
            color: #f5c518;
            box-shadow: 0 5px 20px rgba(245, 197, 24, 0.2);
        }
        .btn:hover {
            transform: translateY(-5px) scale(1.1);
            box-shadow: 0 10px 30px rgba(245, 197, 24, 0.6);
        }
    </style>
</head>
<body>
    <canvas id="bg"></canvas>
    <div class="card" id="holo-card">
        HOLOGRAPHIC CARD
        <div class="button-container">
            <button class="btn btn-yellow">bilgi</button>
            <button class="btn btn-navy">daha fazla bilgi</button>
        </div>
    </div>
    
    <script>
        // Three.js Scene Setup
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('bg') });
        renderer.setSize(window.innerWidth, window.innerHeight);
        
        // Light Effect
        const light = new THREE.PointLight(0x00ffff, 2, 100);
        light.position.set(0, 0, 5);
        scene.add(light);
        
        // Floating Particles
        const particles = new THREE.BufferGeometry();
        const particleCount = 500;
        const positions = new Float32Array(particleCount * 3);
        
        for (let i = 0; i < particleCount * 3; i++) {
            positions[i] = (Math.random() - 0.5) * 10;
        }
        
        particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));
        const particleMaterial = new THREE.PointsMaterial({ color: 0x00ffff, size: 0.05 });
        const particleMesh = new THREE.Points(particles, particleMaterial);
        scene.add(particleMesh);
        
        camera.position.z = 5;
        
        function animate() {
            requestAnimationFrame(animate);
            particleMesh.rotation.y += 0.002;
            renderer.render(scene, camera);
        }
        animate();
        
        // Mouse Movement Effect
        document.addEventListener("mousemove", (event) => {
            let x = (event.clientX / window.innerWidth) * 2 - 1;
            let y = -(event.clientY / window.innerHeight) * 2 + 1;
            document.getElementById("holo-card").style.transform = `rotateY(${x * 15}deg) rotateX(${y * 15}deg)`;
        });
    </script>
</body>
</html>
